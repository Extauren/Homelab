services:
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
  influxdb:
    image: influxdb:2
    container_name: influxdb
    restart: unless-stopped
    ports:
      - '8086:8086'
    volumes:
      - influxdb2-data:/var/lib/influxdb2
      - influxdb2-config:/etc/influxdb2
    healthcheck:
      test: [CMD, curl, -f, http://influxdb:8086/health]
      interval: 5s
      timeout: 10s
      retries: 20
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.0
    container_name: elasticsearch
    restart: unless-stopped
    ports:
      - '9200:9200'
    deploy:
      resources:
        limits:
          memory: 1G
  scrutiny:
    image: 'ghcr.io/analogj/scrutiny:master-web'
    container_name: scrutiny
    restart: unless-stopped
    ports:
      - '8080:8080'
    volumes:
      - scrutiny-data:/opt/scrutiny/config
      - ./scrutiny.yaml:/opt/scrutiny/config/scrutiny.yaml
    env_file:
      - .env
    depends_on:
      influxdb:
        condition: service_healthy
    healthcheck:
      test: [CMD, curl, -f, http://influxdb:8080/api/health]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 10s

volumes:
  grafana-storage: {}
  influxdb2-data: {}
  influxdb2-config: {}
  prometheus-data: {}
  scrutiny-data: {}
